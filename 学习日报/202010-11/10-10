1，vue-router官方指南

2，看vue-router源码解析教程

3，看vue-router源码

---

### 10-12

 三天学习计划（三天内能学多少学多少，工作全部留到很累的时候写，精神好的时候，先把自己想学的献血）

工作：工作改变了，先做诊断信息列表新增知识库弹窗，弹窗做成公用组件  报警信息，用能推荐，wiki填写

学习： 

webpack插件调试，插件编写，简单插件源码，插件面试题。 （今天弄，然后，之后就去学习electron）

> 

node内置模块，中间件，相关面试题。到能用的地方为止  （留到之后去，中央空调做）

> 

vue-cli，如何写个自己的vue-cli

> 

有用过 node 吗，讲讲流

鉴权有了解过了

- Seesion/cookie
- Token
- OAuth
- SSO
- 还好项目都涉及过，虽然不是我用node写的，是后端写的，但是那时候好奇问了一下，并且查了一些资料，勉强答出来

https://juejin.im/post/6844904113302568973#heading-33

参考这个，这个人之前就是做的electron的桌面应用，可以好好看看学习了解下。（他没有准备node，说明他也不会，node要了解基本的面试题+如何使用很清晰）

在做这个项目的时候，要多多去看看自己做的一些东西能加入简历的，反推去做也可以。rem布局自适应，大文件上传，鉴权，文件流



有没有有实际业务场景能用到的插件？？
自己动手写一个插件，
自己去调试一个插件

-----

## 10-14

一整天坐在这里，又不干活，划水，做些啥（整整半年，学习半年，准备半年）
要么刷题
要么看原理文章
要么就研究自己可以造的轮子没

定时定量去完成，为自己负责，为自己未来负责

---

https://mooc.study.163.com/smartSpec/detail/1202851605.htm（照着这上面学）

三个月 还有半月10月 2月份过年，可以直接准备，回来就开始面试，面试题最重要+简历上的技术深挖+准备项目，冲冲冲，不久不久，没有半年，只有三个月

----

## 10-19

- 复习昨天所学
- 计划今天任务
- 完成今天任务
- 10点半后休息

- 复习昨天所学

10：11复习完成**，复习了一个小时**

- 计划今天任务

看所有node相关的那些面试点，整理出来，一个个看，从浅入深，加油

- 完成今天任务

node那个卡住了之后就没再看了，不能持续看那些很难的知识点，放慢速度，由浅入深，安排一些实践的学习工作来做，快点去做新项目吧

1，昨天晚上看的视频，今天来把代码过一遍，知识点看了源码过一遍，看react就自己写一遍 ，看node就自己写一遍，或者看js编程题，看算法题，写写代码

- 10点半后休息

没有，还是看视频，玩游戏停不下来，就不碰手机，就用电脑就行，晚上10点半开始用手机

---------

# 10-20（12天）

webpack+node要学完+react学基础

- 复习昨天所学

8：43 9 ：57 = 1：14分钟

- 计划今天任务

学node中那些模块，模块专题，晚上多学点webpack，学完webpack之后，就可以学react，然后晚上学实践，白天看原理，差不多一两个礼拜就ok

之后没事，就做自己的项目，看看有什么自己能做的

- 完成今天任务

- 10点半后休息

----

## 10-21

- 复习昨天所学

下午

- 计划今天任务

看完webpack学习视频，做好笔记，然后复习下这边这个代码code，然后看react的代码

- 完成今天任务

学了webpack剩下的知识点，花了1个半小时



- 10点半后休息

目标就是把react中的写法都能看懂，那个生命钩子，那个redux，中间件这种都看看有啥用，怎么写

之后就开始看react原理，看了之后，看react的面试题

就over了，然后就是新的一轮复习准备

今天开始看react了，看完就开始复习面试题，改下简历试试看

## 10-22

目标：所有的知识点的面试题全垒打，项目不断加点

- 复习

每天上传到git上，然后每天看自己提交的记录来复习

webpack + react + node

- 计划
- 实施
- 激励

---

## 10-25

猪猪走了，我必须 尽自己努力去准备

- 复习

昨天看的面试题

- 计划

把专题大范围问题好好准备理解

- 实施
- 激励

----

## 10-30

node面试题 多  node.js的优化2

10-12点 node面试题

今天好好全系列都看看，

Node的事件循环
Node. js中间件 

express上一个中间件如何调下一个

node多进程，进程间通信

---

讲了前端优化的实践（为什么优化，怎么优化，怎么评估，还能怎么优化） 1
前端错误收集（怎么记录，怎么区分是不是第三方插件的问题，怎么上报，怎么分析） 2

好多这里面

----

vue

vue3 1

虚拟长列表 1.5

多重背包1

git命令0.5

axios1

---

算法

复习笔记背诵

手写编程题

2-6=4   8-11 = 3   7  2=9

---

ip看看，udp广播组播

---



刚好10个

明天就看笔记刷算题，看有没有遗漏的知识点

虚拟长列表问题
vue+vue3
git命令
多重背包
axios

---

vue： 1，vue原理，vue-router vue3 0k vue面试题 

axios： ajax原理 1

http ： tcp 报文帧，分包，粘包  1



算法： 二叉树，dfs ，贪心，动态规划，链表 2 ok

>  1，复习，2，做题,做腾讯算法专题

vue

> 复习，看新的面试题

项目



新面试题

---

es6中api的参数和返回值

![image-20201101202012190](imge/image-20201101202012190.png)

pwa这个项目

install阶段，缓存静态资源。每次构建重新生成

![image-20201101202323104](imge/image-20201101202323104.png)

![image-20201101202335150](imge/image-20201101202335150.png)

静态资源有个版本号，

![image-20201101202442570](imge/image-20201101202442570.png)

![image-20201101202502126](imge/image-20201101202502126.png)

![clipboard.png](https://segmentfault.com/img/bVbjyCt?w=761&h=172)

workbox是终极方案

是一个webpack插件

![image-20201101202648265](imge/image-20201101202648265.png)

workboxwebpackplugin

workbox会给静态资源添加版本号

![image-20201101202753812](imge/image-20201101202753812.png)

![image-20201101203026712](imge/image-20201101203026712.png)

---

1，项目  2，复习笔记

模块化

明天新面试题，准备自己的项目，看项目代码



1.把es6中api输入输出都看看 1

2.复习笔记（模块化 vue tcp http node webpack）



3.准备项目

打家劫社算法题

----





